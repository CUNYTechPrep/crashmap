ARG DOCKER_NODE_TAG
ARG DOCKER_PYTHON_TAG

# Build the React front end.
FROM node:${DOCKER_NODE_TAG?-} as build-react
ARG BUILD_ENVIRONMENT
ENV PATH /app/client/node_modules/.bin:$PATH
WORKDIR /app/client
COPY client/package.json ./
RUN npm install
COPY client/public ./public
COPY client/src ./src
COPY .env .env[.]local .env[.]${BUILD_ENVIRONMENT?-} .env[,]${BUILD_ENVIRONMENT?-}[.]local ../
RUN npm run build:${BUILD_ENVIRONMENT?-}

# Build the API with the client as static files.
FROM python:${DOCKER_PYTHON_TAG?-}
ARG BUILD_ENVIRONMENT
ARG FLASK_ENV
ARG FLASK_DEBUG
ARG APP_PORT_DOCKER
ARG DATABASE_SCHEME
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_NAME
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ENV FLASK_ENV=${FLASK_ENV:-production}
ENV FLASK_DEBUG=${FLASK_DEBUG:-false}
ENV APP_PORT_DOCKER=${APP_PORT_DOCKER?-}
ENV DATABASE_SCHEME=${DATABASE_SCHEME?-}
ENV DATABASE_HOST=${DATABASE_HOST?-}
ENV DATABASE_PORT=${DATABASE_PORT?-}
ENV DATABASE_NAME=${DATABASE_NAME?-}
ENV DATABASE_USERNAME=${DATABASE_USERNAME?-}
ENV DATABASE_PASSWORD=${DATABASE_PASSWORD?-}
COPY api /app/api
WORKDIR /app/api
RUN pip install -r requirements/${BUILD_ENVIRONMENT?-}.txt
COPY --from=build-react /app/client/build /app/client/build
EXPOSE ${APP_PORT_DOCKER?-}
CMD gunicorn -b :${APP_PORT_DOCKER?-} main:flask_app
